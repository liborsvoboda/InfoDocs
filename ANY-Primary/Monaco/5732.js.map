{"version":3,"file":"5732.js","mappings":"8IAAA,moP","sources":["file:///E:\\Downloads\\monaco-editor-main\\website\\src\\website\\data\\home-samples\\sample.javascript.txt"],"sourcesContent":["export default \"/*\\n  Â© Microsoft. All rights reserved.\\n\\n  This library is supported for use in Windows Tailored Apps only.\\n\\n  Build: 6.2.8100.0 \\n  Version: 0.5 \\n*/\\n\\n(function (global, undefined) {\\n\\t\\\"use strict\\\";\\n\\tundefinedVariable = {};\\n\\tundefinedVariable.prop = 5;\\n\\n\\tfunction initializeProperties(target, members) {\\n\\t\\tvar keys = Object.keys(members);\\n\\t\\tvar properties;\\n\\t\\tvar i, len;\\n\\t\\tfor (i = 0, len = keys.length; i < len; i++) {\\n\\t\\t\\tvar key = keys[i];\\n\\t\\t\\tvar enumerable = key.charCodeAt(0) !== /*_*/95;\\n\\t\\t\\tvar member = members[key];\\n\\t\\t\\tif (member && typeof member === 'object') {\\n\\t\\t\\t\\tif (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\\n\\t\\t\\t\\t\\tif (member.enumerable === undefined) {\\n\\t\\t\\t\\t\\t\\tmember.enumerable = enumerable;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tproperties = properties || {};\\n\\t\\t\\t\\t\\tproperties[key] = member;\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t} \\n\\t\\t\\t}\\n\\t\\t\\tif (!enumerable) {\\n\\t\\t\\t\\tproperties = properties || {};\\n\\t\\t\\t\\tproperties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\ttarget[key] = member;\\n\\t\\t}\\n\\t\\tif (properties) {\\n\\t\\t\\tObject.defineProperties(target, properties);\\n\\t\\t}\\n\\t}\\n\\n\\t(function (rootNamespace) {\\n\\n\\t\\t// Create the rootNamespace in the global namespace\\n\\t\\tif (!global[rootNamespace]) {\\n\\t\\t\\tglobal[rootNamespace] = Object.create(Object.prototype);\\n\\t\\t}\\n\\n\\t\\t// Cache the rootNamespace we just created in a local variable\\n\\t\\tvar _rootNamespace = global[rootNamespace];\\n\\t\\tif (!_rootNamespace.Namespace) {\\n\\t\\t\\t_rootNamespace.Namespace = Object.create(Object.prototype);\\n\\t\\t}\\n\\n\\t\\tfunction defineWithParent(parentNamespace, name, members) {\\n\\t\\t\\t/// <summary locid=\\\"1\\\">\\n\\t\\t\\t/// Defines a new namespace with the specified name, under the specified parent namespace.\\n\\t\\t\\t/// </summary>\\n\\t\\t\\t/// <param name=\\\"parentNamespace\\\" type=\\\"Object\\\" locid=\\\"2\\\">\\n\\t\\t\\t/// The parent namespace which will contain the new namespace.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"name\\\" type=\\\"String\\\" locid=\\\"3\\\">\\n\\t\\t\\t/// Name of the new namespace.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"members\\\" type=\\\"Object\\\" locid=\\\"4\\\">\\n\\t\\t\\t/// Members in the new namespace.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <returns locid=\\\"5\\\">\\n\\t\\t\\t/// The newly defined namespace.\\n\\t\\t\\t/// </returns>\\n\\t\\t\\tvar currentNamespace = parentNamespace,\\n\\t\\t\\t\\tnamespaceFragments = name.split(\\\".\\\");\\n\\n\\t\\t\\tfor (var i = 0, len = namespaceFragments.length; i < len; i++) {\\n\\t\\t\\t\\tvar namespaceName = namespaceFragments[i];\\n\\t\\t\\t\\tif (!currentNamespace[namespaceName]) {\\n\\t\\t\\t\\t\\tObject.defineProperty(currentNamespace, namespaceName, \\n\\t\\t\\t\\t\\t\\t{ value: {}, writable: false, enumerable: true, configurable: true }\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcurrentNamespace = currentNamespace[namespaceName];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (members) {\\n\\t\\t\\t\\tinitializeProperties(currentNamespace, members);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn currentNamespace;\\n\\t\\t}\\n\\n\\t\\tfunction define(name, members) {\\n\\t\\t\\t/// <summary locid=\\\"6\\\">\\n\\t\\t\\t/// Defines a new namespace with the specified name.\\n\\t\\t\\t/// </summary>\\n\\t\\t\\t/// <param name=\\\"name\\\" type=\\\"String\\\" locid=\\\"7\\\">\\n\\t\\t\\t/// Name of the namespace.  This could be a dot-separated nested name.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"members\\\" type=\\\"Object\\\" locid=\\\"4\\\">\\n\\t\\t\\t/// Members in the new namespace.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <returns locid=\\\"5\\\">\\n\\t\\t\\t/// The newly defined namespace.\\n\\t\\t\\t/// </returns>\\n\\t\\t\\treturn defineWithParent(global, name, members);\\n\\t\\t}\\n\\n\\t\\t// Establish members of the \\\"WinJS.Namespace\\\" namespace\\n\\t\\tObject.defineProperties(_rootNamespace.Namespace, {\\n\\n\\t\\t\\tdefineWithParent: { value: defineWithParent, writable: true, enumerable: true },\\n\\n\\t\\t\\tdefine: { value: define, writable: true, enumerable: true }\\n\\n\\t\\t});\\n\\n\\t})(\\\"WinJS\\\");\\n\\n\\t(function (WinJS) {\\n\\n\\t\\tfunction define(constructor, instanceMembers, staticMembers) {\\n\\t\\t\\t/// <summary locid=\\\"8\\\">\\n\\t\\t\\t/// Defines a class using the given constructor and with the specified instance members.\\n\\t\\t\\t/// </summary>\\n\\t\\t\\t/// <param name=\\\"constructor\\\" type=\\\"Function\\\" locid=\\\"9\\\">\\n\\t\\t\\t/// A constructor function that will be used to instantiate this class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"instanceMembers\\\" type=\\\"Object\\\" locid=\\\"10\\\">\\n\\t\\t\\t/// The set of instance fields, properties and methods to be made available on the class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"staticMembers\\\" type=\\\"Object\\\" locid=\\\"11\\\">\\n\\t\\t\\t/// The set of static fields, properties and methods to be made available on the class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <returns type=\\\"Function\\\" locid=\\\"12\\\">\\n\\t\\t\\t/// The newly defined class.\\n\\t\\t\\t/// </returns>\\n\\t\\t\\tconstructor = constructor || function () { };\\n\\t\\t\\tif (instanceMembers) {\\n\\t\\t\\t\\tinitializeProperties(constructor.prototype, instanceMembers);\\n\\t\\t\\t}\\n\\t\\t\\tif (staticMembers) {\\n\\t\\t\\t\\tinitializeProperties(constructor, staticMembers);\\n\\t\\t\\t}\\n\\t\\t\\treturn constructor;\\n\\t\\t}\\n\\n\\t\\tfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\\n\\t\\t\\t/// <summary locid=\\\"13\\\">\\n\\t\\t\\t/// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\\n\\t\\t\\t/// </summary>\\n\\t\\t\\t/// <param name=\\\"baseClass\\\" type=\\\"Function\\\" locid=\\\"14\\\">\\n\\t\\t\\t/// The class to inherit from.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"constructor\\\" type=\\\"Function\\\" locid=\\\"9\\\">\\n\\t\\t\\t/// A constructor function that will be used to instantiate this class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"instanceMembers\\\" type=\\\"Object\\\" locid=\\\"10\\\">\\n\\t\\t\\t/// The set of instance fields, properties and methods to be made available on the class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <param name=\\\"staticMembers\\\" type=\\\"Object\\\" locid=\\\"11\\\">\\n\\t\\t\\t/// The set of static fields, properties and methods to be made available on the class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <returns type=\\\"Function\\\" locid=\\\"12\\\">\\n\\t\\t\\t/// The newly defined class.\\n\\t\\t\\t/// </returns>\\n\\t\\t\\tif (baseClass) {\\n\\t\\t\\t\\tconstructor = constructor || function () { };\\n\\t\\t\\t\\tvar basePrototype = baseClass.prototype;\\n\\t\\t\\t\\tconstructor.prototype = Object.create(basePrototype);\\n\\t\\t\\t\\tObject.defineProperty(constructor.prototype, \\\"_super\\\", { value: basePrototype });\\n\\t\\t\\t\\tObject.defineProperty(constructor.prototype, \\\"constructor\\\", { value: constructor });\\n\\t\\t\\t\\tif (instanceMembers) {\\n\\t\\t\\t\\t\\tinitializeProperties(constructor.prototype, instanceMembers);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (staticMembers) {\\n\\t\\t\\t\\t\\tinitializeProperties(constructor, staticMembers);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn constructor;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn define(constructor, instanceMembers, staticMembers);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tfunction mix(constructor) {\\n\\t\\t\\t/// <summary locid=\\\"15\\\">\\n\\t\\t\\t/// Defines a class using the given constructor and the union of the set of instance members\\n\\t\\t\\t/// specified by all the mixin objects.  The mixin parameter list can be of variable length.\\n\\t\\t\\t/// </summary>\\n\\t\\t\\t/// <param name=\\\"constructor\\\" locid=\\\"9\\\">\\n\\t\\t\\t/// A constructor function that will be used to instantiate this class.\\n\\t\\t\\t/// </param>\\n\\t\\t\\t/// <returns locid=\\\"12\\\">\\n\\t\\t\\t/// The newly defined class.\\n\\t\\t\\t/// </returns>\\n\\t\\t\\tconstructor = constructor || function () { };\\n\\t\\t\\tvar i, len;\\n\\t\\t\\tfor (i = 0, len = arguments.length; i < len; i++) {\\n\\t\\t\\t\\tinitializeProperties(constructor.prototype, arguments[i]);\\n\\t\\t\\t}\\n\\t\\t\\treturn constructor;\\n\\t\\t}\\n\\n\\t\\t// Establish members of \\\"WinJS.Class\\\" namespace\\n\\t\\tWinJS.Namespace.define(\\\"WinJS.Class\\\", {\\n\\t\\t\\tdefine: define,\\n\\t\\t\\tderive: derive,\\n\\t\\t\\tmix: mix\\n\\t\\t});\\n\\n\\t})(WinJS);\\n\\n})(this);\";"],"names":[],"sourceRoot":""}