"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[1244],{1244:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r='$SelectedObjectNames=@();\n$XenCenterNodeSelected = 0;\n#the object info array contains hashmaps, each of which represent a parameter set and describe a target in the XenCenter resource list\nforeach($parameterSet in $ObjInfoArray)\n{\n\tif ($parameterSet["class"] -eq "blank")\n\t{\n\t\t#When the XenCenter node is selected a parameter set is created for each of your connected servers with the class and objUuid keys marked as blank\n\t\tif ($XenCenterNodeSelected)\n\t\t{\n\t\t\tcontinue\n\t\t}\n\t\t$XenCenterNodeSelected = 1;\n\t\t$SelectedObjectNames += "XenCenter"\n\t}\n\telseif ($parameterSet["sessionRef"] -eq "null")\n\t{\n\t\t#When a disconnected server is selected there is no session information, we get null for everything except class\n\t}\n\t\t$SelectedObjectNames += "a disconnected server"\n\telse\n\t{\n\t\tConnect-XenServer -url $parameterSet["url"] -opaqueref $parameterSet["sessionRef"]\n\t\t#Use $class to determine which server objects to get\n\t\t#-properties allows us to filter the results to just include the selected object\n\t\t$exp = "Get-XenServer:{0} -properties @{{uuid=\'{1}\'}}" -f $parameterSet["class"], $parameterSet["objUuid"]\n\t\t$obj = Invoke-Expression $exp\n\t\t$SelectedObjectNames += $obj.name_label;\n\t} \n}'}}]);
//# sourceMappingURL=1244.js.map