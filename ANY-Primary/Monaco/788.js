"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[788],{788:(t,e,n)=>{n.r(e),n.d(e,{default:()=>o});const o='// Theme matching (i.e. applying a style to a token) happens in JavaScript.\n// We must therefore register the theme rules in JavaScript.\n\n// A custom theme must name its base theme (i.e. \'vs\', \'vs-dark\' or \'hc-black\')\n// It can then choose to inherit the rules from the base theme or not\n// A rule token matching is prefix based: e.g.\n//  - string will match a token with type: string, string.double.js or string.html\n//  - string.double will match a token with type string.double but will not match string or string.html\n\n// !!! Tokens can be inspected using F1 > Developer: Inspect Tokens !!!\n\nmonaco.editor.defineTheme("myCustomTheme", {\n\tbase: "vs", // can also be vs-dark or hc-black\n\tinherit: true, // can also be false to completely replace the builtin rules\n\trules: [\n\t\t{\n\t\t\ttoken: "comment",\n\t\t\tforeground: "ffa500",\n\t\t\tfontStyle: "italic underline",\n\t\t},\n\t\t{ token: "comment.js", foreground: "008800", fontStyle: "bold" },\n\t\t{ token: "comment.css", foreground: "0000ff" }, // will inherit fontStyle from `comment` above\n\t],\n\tcolors: {\n\t\t"editor.foreground": "#000000",\n\t},\n});\n\nmonaco.editor.create(document.getElementById("container"), {\n\tvalue: getCode(),\n\tlanguage: "text/html",\n\ttheme: "myCustomTheme",\n});\n\nfunction getCode() {\n\treturn (\n\t\t\'<html>\x3c!-- // !!! Tokens can be inspected using F1 > Developer: Inspect Tokens !!! --\x3e\\n<head>\\n\t\x3c!-- HTML comment --\x3e\\n\t<style type="text/css">\\n\t\t/* CSS comment */\\n\t</style>\\n\t<script type="javascript">\\n\t\t// JavaScript comment\\n\t</\' +\n\t\t"script>\\n</head>\\n<body></body>\\n</html>"\n\t);\n}\n'}}]);
//# sourceMappingURL=788.js.map