"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[6012],{6012:(t,n,e)=>{e.r(n),e.d(n,{default:()=>o});const o='function createDependencyProposals(range) {\n\t// returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\n\t// here you could do a server side lookup\n\treturn [\n\t\t{\n\t\t\tlabel: \'"lodash"\',\n\t\t\tkind: monaco.languages.CompletionItemKind.Function,\n\t\t\tdocumentation: "The Lodash library exported as Node.js modules.",\n\t\t\tinsertText: \'"lodash": "*"\',\n\t\t\trange: range,\n\t\t},\n\t\t{\n\t\t\tlabel: \'"express"\',\n\t\t\tkind: monaco.languages.CompletionItemKind.Function,\n\t\t\tdocumentation: "Fast, unopinionated, minimalist web framework",\n\t\t\tinsertText: \'"express": "*"\',\n\t\t\trange: range,\n\t\t},\n\t\t{\n\t\t\tlabel: \'"mkdirp"\',\n\t\t\tkind: monaco.languages.CompletionItemKind.Function,\n\t\t\tdocumentation: "Recursively mkdir, like <code>mkdir -p</code>",\n\t\t\tinsertText: \'"mkdirp": "*"\',\n\t\t\trange: range,\n\t\t},\n\t\t{\n\t\t\tlabel: \'"my-third-party-library"\',\n\t\t\tkind: monaco.languages.CompletionItemKind.Function,\n\t\t\tdocumentation: "Describe your library here",\n\t\t\tinsertText: \'"${1:my-third-party-library}": "${2:1.2.3}"\',\n\t\t\tinsertTextRules:\n\t\t\t\tmonaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n\t\t\trange: range,\n\t\t},\n\t];\n}\n\nmonaco.languages.registerCompletionItemProvider("json", {\n\tprovideCompletionItems: function (model, position) {\n\t\t// find out if we are completing a property in the \'dependencies\' object.\n\t\tvar textUntilPosition = model.getValueInRange({\n\t\t\tstartLineNumber: 1,\n\t\t\tstartColumn: 1,\n\t\t\tendLineNumber: position.lineNumber,\n\t\t\tendColumn: position.column,\n\t\t});\n\t\tvar match = textUntilPosition.match(\n\t\t\t/"dependencies"\\s*:\\s*\\{\\s*("[^"]*"\\s*:\\s*"[^"]*"\\s*,\\s*)*([^"]*)?$/\n\t\t);\n\t\tif (!match) {\n\t\t\treturn { suggestions: [] };\n\t\t}\n\t\tvar word = model.getWordUntilPosition(position);\n\t\tvar range = {\n\t\t\tstartLineNumber: position.lineNumber,\n\t\t\tendLineNumber: position.lineNumber,\n\t\t\tstartColumn: word.startColumn,\n\t\t\tendColumn: word.endColumn,\n\t\t};\n\t\treturn {\n\t\t\tsuggestions: createDependencyProposals(range),\n\t\t};\n\t},\n});\n\nmonaco.editor.create(document.getElementById("container"), {\n\tvalue: \'{\\n\\t"dependencies": {\\n\\t\\t\\n\\t}\\n}\\n\',\n\tlanguage: "json",\n});\n'}}]);
//# sourceMappingURL=6012.js.map