@import (once) "../../include/vars";
@import (once) "../../include/mixins";

:root {
    --input-height: 36px;
}


:root {
    --checkbox-check-color: #fff;
    --checkbox-border-color: #191919;
    --checkbox-checked-background: #191919;
    --checkbox-focus-color: #e8e8e8;
    --checkbox-disabled-color: #e8e8e8;
}

.dark-side {
    --checkbox-check-color: #fff;
    --checkbox-border-color: #3c3c3c;
    --checkbox-checked-background: #468cff;
    --checkbox-focus-color: #191919;
    --checkbox-disabled-color: #2c2c2c;
}

.checkbox {
    display: inline-flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    position: relative;
    margin: 0;
    user-select: none;
    cursor: pointer;
    height: 36px;

    .hideElement(input);

    .check, .caption {
        display: block;
        line-height: 1;
        font-size: 14px;
        margin: 0 4px;
        position: relative;
    }

    .check {
        border: 2px var(--border-color) solid;
        width: 20px;
        height: 20px;
        flex-shrink: 0;
        line-height: var(--input-height);

        &::before {
            position: absolute;
            vertical-align: middle;
            font-size: 0;
            content: "";
            height: 5px;
            width: 10px;
            background-color: transparent;
            color: transparent;
            border-left: 2px solid;
            border-bottom: 2px solid;
            border-color: var(--checkbox-check-color);
            left: 50%;
            top: 50%;
            margin-left: -5px;
            margin-top: -4px;
            display: none;
            transform: rotate(-45deg);
        }
    }

    input[type=checkbox]:checked ~ .check {
        border-color: var(--checkbox-border-color);
        background-color: var(--checkbox-checked-background);

        &::before {
            display: block;
        }
    }

    input[type=checkbox]:disabled ~ .check {
        border-color: var(--checkbox-disabled-color);
        background-color: var(--checkbox-disabled-color);
    }

    input[data-indeterminate=true] ~ .check {
        border-color: var(--checkbox-checked-background);
        background-color: var(--checkbox-checked-background);

        &::before {
            display: block!important;
            .square(6, px);
            background-color: var(--checkbox-check-color);
            border: 2px solid var(--checkbox-check-color);
            left: 50%;
            top: 50%;
            margin-left: -3px;
            margin-top: -3px;
            .rotate(0);
        }
    }

    .check {order: 1;}
    .caption {order: 2;}

    &.caption-left {
        flex-flow: row-reverse nowrap;
    }

    &.required, &.invalid, &.valid {
        border: none!important;
    }

    &.invalid {
        &::after {
            display: none;
        }
    }

    &:focus, &:active {
        input[type=checkbox]:not(:disabled) {
            & ~ .check {
                .halo();
            }
        }
    }

    &.transition-on {
        .check {
            transition: @transition-base;
        }

        input[type=checkbox]:checked ~ .check {
            transition: @transition-base;
        }

        input[data-indeterminate=true] ~ .check {
            transition: @transition-base;
        }
    }

    .check.focused {
        box-shadow: 0 0 0 3px var(--checkbox-focus-color);
    }
}

