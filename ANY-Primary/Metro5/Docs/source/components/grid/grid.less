@import (once) "../../include/vars";

:root {
    --grid-gutter: 16px;
}

.grid {
    display: flex;
    flex-flow: column;
}

.row {
    display: flex;
    flex-flow: row wrap;
    gap: var(--grid-gutter);
    justify-content: flex-start;
    margin-right: calc(-1 * var(--grid-gutter));
}

.row + .row {
    margin-top: var(--grid-gutter);
}

.row {
    & > [class*=cell-], & > [class*=col-] {
        position: relative;
        display: block;
        padding: 0;
        min-height: 1px;
        flex: 0 0 100%;
        max-width: calc(100% - var(--grid-gutter));
    }

    & > .cell-auto, & > .col-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
    }

    each(range(0, 12), .(@k) {
        & > .cell-@{k}, .col-@{k} {
            flex: 0 0 calc(@gridCellBaseSize * @k - var(--grid-gutter));
            max-width: calc(@gridCellBaseSize * @k - var(--grid-gutter));
        }
        & > .offset-@{k} {
            margin-left: calc(@gridCellBaseSize * @k);
        }
    })

    each(@media-rules, {
        @media screen and (min-width: @value) {
            & > .cell-@{key}-half, & > .col-@{key}-half {
                flex: 0 0 50%;
                max-width: 50%;
            }

            & > .cell-@{key}-one-third,
            & > .col-@{key}-one-third,
            & > .cell-@{key}-third,
            & > .col-@{key}-third {
                flex: 0 0 calc(33.3333333% - var(--grid-gutter));
                max-width: calc(33.3333333% - var(--grid-gutter));
            }

            & > .cell-@{key}-two-third,
            & > .col-@{key}-two-third {
                flex: 0 0 calc(66.6666666% - var(--grid-gutter));
                max-width: calc(66.6666666% - var(--grid-gutter));
            }

            & > .cell-@{key}-one-fifth,
            & > .col-@{key}-one-fifth {
                flex: 0 0 calc(20% - (var(--grid-gutter)));
                max-width: calc(20% - (var(--grid-gutter)));
            }

            & > .cell-@{key}-two-fifth,
            & > .col-@{key}-two-fifth {
                flex: 0 0 calc(40% - (var(--grid-gutter)));
                max-width: calc(40% - (var(--grid-gutter)));
            }

            & > .cell-@{key}-three-fifth,
            & > .col-@{key}-three-fifth {
                flex: 0 0 calc(60% - (var(--grid-gutter)));
                max-width: calc(60% - (var(--grid-gutter)));
            }

            .cell-@{key}-four-fifth, .col-@{key}-four-fifth {
                flex: 0 0 calc(80% - (var(--grid-gutter)));
                max-width: calc(80% - (var(--grid-gutter)));
            }

            & > .cell-@{key},
            & > .col-@{key} {
                flex-basis: 0;
                flex-grow: 1;
                max-width: 100%;
            }

            & > .cell-@{key}-auto,
            & > .col-@{key}-auto {
                flex: 0 0 auto;
                max-width: none;
            }

            each(range(1, 12), .(@k) {
                & > .cell-@{key}-@{k},
                & > .col-@{key}-@{k} {
                    flex: 0 0 calc( @gridCellBaseSize * @k - var(--grid-gutter) ) ;
                    max-width: calc( @gridCellBaseSize * @k - var(--grid-gutter) ) ;
                }
                & > .offset-@{key}-@{k} {
                    margin-left: calc( @gridCellBaseSize * @k );
                }
            })
        }
    })
}

.no-gap {
    --grid-gutter: 0px;
}
